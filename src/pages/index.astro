---
import Layout from '../layouts/StaticPage.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { User, users } from '../consts';
import { getCollection } from 'astro:content';
import { Post, externalPosts } from '../data/blog-posts';

// Fetch internal blog posts from the content collection and transform them into Post objects
let posts = (await getCollection('blog')).map((post) => {
	const authors = post.data.authors
		.map((author) => users.get(author))
		.filter((author): author is User => author !== undefined);
	return new Post(
		post.data.title,
		`/blog/${post.id}/`,
		post.data.pubDate,
		authors
	);
});

// Combine internal and external posts
let unifiedPosts = [...posts, ...externalPosts];

// Sort all posts by date, newest first
unifiedPosts.sort((a, b) => b.pubDate.getTime() - a.pubDate.getTime());
---

<Layout
	title="ML Engineering & Distributed Systems Blog"
	description="Expert insights on ML engineering, distributed systems, and production infrastructure. Covering model deployment, ML ops, and scalable system architecture."
>
	<section class="shelf-content">
		<div class="shelf-list">
			{
				// Render each post with its date and title as a link
				unifiedPosts.map((post) => (
					<article class="shelf-item">
						<div class="shelf-title">
							<span class="read-date">
								<FormattedDate date={post.pubDate} />:
							</span>
							<a href={post.url} target={post.url.startsWith('http') ? '_blank' : undefined} rel={post.url.startsWith('http') ? 'noopener noreferrer' : undefined}>
								{post.title}
							</a>
						</div>
					</article>
				))
			}
		</div>
	</section>
</Layout>
